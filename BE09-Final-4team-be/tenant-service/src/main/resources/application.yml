# Spring Boot Configuration
server:
  port: 8083
  servlet:
    context-path: /tenant-api

# Application Configuration
spring:
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: update  # tenant-service는 단일 DB이므로 JPA 자동 관리
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        show_sql: false
        format_sql: true
        jdbc:
          time_zone: Asia/Seoul
  
  # Flyway 비활성화 (tenant-service는 메타데이터만 관리)
  flyway:
    enabled: false

# RabbitMQ Configuration
  rabbitmq:
    host: localhost
    port: 5672
    username: ${RABBITMQ_USERNAME:guest}
    password: ${RABBITMQ_PASSWORD:guest}
    virtual-host: /
    connection-timeout: 60000
    publisher-confirm-type: correlated
    publisher-returns: true
    template:
      mandatory: true
      retry:
        enabled: true
        initial-interval: 1000
        max-attempts: 3

# JWT Configuration (RabbitMQ 메시지 처리용)
jwt:
  secret: ${JWT_SECRET:dGVzdC1zZWNyZXQta2V5LWZvci10ZW5hbnQtc2VydmljZS1oZXJtZXMtcHJvamVjdA==}
  expiration-time: 86400000    # 24시간
  refresh-expiration: 604800000 # 7일

# Multi-tenancy Configuration
hermes:
  multitenancy:
    enabled: false  # 🔥 Tenant Service는 멀티테넌시 비활성화 (단일 DB 사용)
    rabbitmq:
      enabled: true   # RabbitMQ는 활성화 (이벤트 발행용)
      tenant-exchange: tenant.events
      tenant-created-routing-key: tenant.created
      tenant-deleted-routing-key: tenant.deleted
      tenant-updated-routing-key: tenant.updated
      tenant-status-changed-routing-key: tenant.status.changed
      max-retry-count: 3
      retry-delay: 5000

# Eureka Client Configuration
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 10
    lease-expiration-duration-in-seconds: 30

# Management & Actuator
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  prometheus:
    metrics:
      export:
        enabled: true

# Logging Configuration
logging:
  level:
    com.hermes.tenantservice: INFO
    com.hermes.multitenancy: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level [%X{tenantId:-system}] %logger{36} - %msg%n"

# OpenAPI Documentation
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    display-request-duration: true
    groups-order: DESC
